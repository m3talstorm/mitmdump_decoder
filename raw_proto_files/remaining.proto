message GoogleAuthEventParams {
}
message ChannelAuthEventParams {
}
message LocationUpdateEventParams {
}
message RpcResponseEventParams {
}
message GoogleToken {
}
message AssetDigestRequestProto {
  Rpc.Platform Platform = 1;
  string DeviceManufacturer = 2;
  string DeviceModel = 3;
  string Locale = 4;
  uint32 AppVersion = 5;
}
message AssetDigestEntryProto {
  string AssetId = 1;
  string BundleName = 2;
  int64 Version = 3;
  uint32 Checksum = 4;
  int32 Size = 5;
  Google.Protobuf.ByteString Key = 6;
}
message AssetDigestOutProto {
  repeated Holoholo.Rpc.AssetDigestEntryProto Digest = 1;
  uint64 Timestamp = 2;
}
message DownloadUrlRequestProto {
  repeated string AssetId = 1;
}
message DownloadUrlEntryProto {
  string AssetId = 1;
  string Url = 2;
  int32 Size = 3;
  uint32 Checksum = 4;
}
message DownloadUrlOutProto {
  repeated Holoholo.Rpc.DownloadUrlEntryProto DownloadUrls = 1;
}
message CollectDailyBonusProto {
}
message CollectDailyBonusOutProto {
  Rpc.Result.Types.CollectDailyBonusOutProto.Result Result = 1;
}
message CollectDailyDefenderBonusProto {
}
message CollectDailyDefenderBonusOutProto {
  Rpc.Result.Types.CollectDailyDefenderBonusOutProto.Result Result = 1;
  repeated string CurrencyType = 2;
  repeated int32 CurrencyAwarded = 3;
  int32 NumDefenders = 4;
}
message EchoProto {
}
message EchoOutProto {
  string Context = 1;
}
message GetHatchedEggsProto {
}
message GetHatchedEggsOutProto {
  bool Success = 1;
  repeated uint64 PokemonId = 2;
  repeated int32 ExpAwarded = 3;
  repeated int32 CandyAwarded = 4;
  repeated int32 StardustAwarded = 5;
}
message EncounterProto {
  uint64 EncounterId = 1;
  string SpawnpointId = 2;
  double PlayerLatDegrees = 3;
  double PlayerLngDegrees = 4;
}
message EncounterOutProto {
  Holoholo.Rpc.WildPokemonProto Pokemon = 1;
  Rpc.Background.Types.EncounterOutProto.Background Background = 2;
  Rpc.Status.Types.EncounterOutProto.Status Status = 3;
  Holoholo.Rpc.CaptureProbabilityProto CaptureProbability = 4;
}
message CatchPokemonProto {
  uint64 EncounterId = 1;
  int32 Pokeball = 2;
  double NormalizedReticleSize = 3;
  string SpawnPointGuid = 4;
  bool HitPokemon = 5;
  double SpinModifier = 6;
  double NormalizedHitPosition = 7;
}
message CatchPokemonOutProto {
  Rpc.Status.Types.CatchPokemonOutProto.Status Status = 1;
  double MissPercent = 2;
  uint64 CapturedPokemonId = 3;
  Holoholo.Rpc.CaptureScoreProto Scores = 4;
}
message UseItemCaptureProto {
  Rpc.Item Item = 1;
  uint64 EncounterId = 2;
  string SpawnPointGuid = 3;
}
message UseItemCaptureOutProto {
  bool Success = 1;
  double ItemCaptureMult = 2;
  double ItemFleeMult = 3;
  bool StopMovement = 4;
  bool StopAttack = 5;
  bool TargetMax = 6;
  bool TargetSlow = 7;
}
message EncounterTutorialCompleteProto {
  int32 PokedexId = 1;
}
message EncounterTutorialCompleteOutProto {
  Rpc.Result.Types.EncounterTutorialCompleteOutProto.Result Result = 1;
  Holoholo.Rpc.PokemonProto Pokemon = 2;
  Holoholo.Rpc.CaptureScoreProto Scores = 3;
}
message CaptureProbabilityProto {
  repeated Rpc.Item PokeballType = 1;
  repeated float CaptureProbability = 2;
  double ReticleDifficultyScale = 12;
}
message CaptureScoreProto {
  repeated Rpc.HoloActivityType ActivityType = 1;
  repeated int32 Exp = 2;
  repeated int32 Candy = 3;
  repeated int32 Stardust = 4;
}
message UseIncenseActionProto {
  Rpc.Item IncenseType = 1;
}
message UseIncenseActionOutProto {
  Rpc.Result.Types.UseIncenseActionOutProto.Result Result = 1;
  Holoholo.Rpc.AppliedItemProto AppliedIncense = 2;
}
message GetIncensePokemonProto {
  double PlayerLatDegrees = 1;
  double PlayerLngDegrees = 2;
}
message GetIncensePokemonOutProto {
  Rpc.Result.Types.GetIncensePokemonOutProto.Result Result = 1;
  int32 PokemonTypeId = 2;
  double Lat = 3;
  double Lng = 4;
  string EncounterLocation = 5;
  uint64 EncounterId = 6;
  int64 DisappearTimeMs = 7;
}
message IncenseEncounterProto {
  int64 EncounterId = 1;
  string EncounterLocation = 2;
}
message IncenseEncounterOutProto {
  Rpc.Result.Types.IncenseEncounterOutProto.Result Result = 1;
  Holoholo.Rpc.PokemonProto Pokemon = 2;
  Holoholo.Rpc.CaptureProbabilityProto CaptureProbability = 3;
}
message DiskEncounterProto {
  int64 EncounterId = 1;
  string FortId = 2;
  double PlayerLatDegrees = 3;
  double PlayerLngDegrees = 4;
}
message DiskEncounterOutProto {
  Rpc.Result.Types.DiskEncounterOutProto.Result Result = 1;
  Holoholo.Rpc.PokemonProto Pokemon = 2;
  Holoholo.Rpc.CaptureProbabilityProto CaptureProbability = 3;
}
message EvolvePokemonProto {
  uint64 PokemonId = 1;
}
message EvolvePokemonOutProto {
  Rpc.Result.Types.EvolvePokemonOutProto.Result Result = 1;
  Holoholo.Rpc.PokemonProto EvolvedPokemon = 2;
  int32 ExpAwarded = 3;
  int32 CandyAwarded = 4;
}


message FortDeployProto {
  string FortId = 1;
  uint64 PokemonId = 2;
  double PlayerLatDegrees = 3;
  double PlayerLngDegrees = 4;
}
message FortDeployOutProto {
  Rpc.Result.Types.FortDeployOutProto.Result Result = 1;
  Holoholo.Rpc.FortDetailsOutProto FortDetailsOutProto = 2;
  Holoholo.Rpc.PokemonProto EggPokemon = 3;
  Holoholo.Rpc.GymStateProto GymStateProto = 4;
}
message FortRecallProto {
  string FortId = 1;
  uint64 PokemonId = 2;
  double PlayerLatDegrees = 3;
  double PlayerLngDegrees = 4;
}
message FortRecallOutProto {
  Rpc.Result.Types.FortRecallOutProto.Result Result = 1;
  Holoholo.Rpc.FortDetailsOutProto FortDetailsOutProto = 2;
}
message AddFortModifierProto {
  Rpc.Item ModifierType = 1;
  string FortId = 2;
  double PlayerLatDegrees = 3;
  double PlayerLngDegrees = 4;
}
message AddFortModifierOutProto {
  Rpc.Result.Types.AddFortModifierOutProto.Result Result = 1;
  Holoholo.Rpc.FortDetailsOutProto FortDetailsOutProto = 2;
}
message PokemonCameraAttributesProto {
  float DiskRadiusM = 1;
  float CylRadiusM = 2;
  float CylHeightM = 3;
  float CylGroundM = 4;
  float ShoulderModeScale = 5;
}
message PokemonEncounterAttributesProto {
  float BaseCaptureRate = 1;
  float BaseFleeRate = 2;
  float CollisionRadiusM = 3;
  float CollisionHeightM = 4;
  float CollisionHeadRadiusM = 5;
  Rpc.HoloPokemonMovementType MovementType = 6;
  float MovementTimerS = 7;
  float JumpTimeS = 8;
  float AttackTimerS = 9;
}
message PokemonStatsAttributesProto {
  int32 BaseStamina = 1;
  int32 BaseAttack = 2;
  int32 BaseDefense = 3;
  int32 DodgeEnergyDelta = 8;
}
message PokemonSettingsProto {
  Rpc.HoloPokemonId UniqueId = 1;
  float ModelScale = 3;
  Rpc.HoloPokemonType Type1 = 4;
  Rpc.HoloPokemonType Type2 = 5;
  Holoholo.Rpc.PokemonCameraAttributesProto Camera = 6;
  Holoholo.Rpc.PokemonEncounterAttributesProto Encounter = 7;
  Holoholo.Rpc.PokemonStatsAttributesProto Stats = 8;
  repeated Rpc.HoloPokemonMove QuickMoves = 9;
  repeated Rpc.HoloPokemonMove CinematicMoves = 10;
  repeated float AnimTime = 11;
  repeated Rpc.HoloPokemonId Evolution = 12;
  int32 EvolutionPips = 13;
  Rpc.HoloPokemonClass PokemonClass = 14;
  float PokedexHeightM = 15;
  float PokedexWeightKg = 16;
  Rpc.HoloPokemonId ParentId = 17;
  float HeightStdDev = 18;
  float WeightStdDev = 19;
  float KmDistanceToHatch = 20;
  Rpc.HoloPokemonFamilyId FamilyId = 21;
  int32 CandyToEvolve = 22;
}
message PokeBallAttributesProto {
  Rpc.HoloItemEffect ItemEffect = 1;
  float CaptureMulti = 2;
  float CaptureMultiEffect = 3;
  float ItemEffectMod = 4;
}
message PotionAttributesProto {
  float StaPercent = 1;
  int32 StaAmount = 2;
}
message ReviveAttributesProto {
  float StaPercent = 1;
}
message BattleAttributesProto {
  float StaPercent = 1;
  float AtkPercent = 2;
  float DefPercent = 3;
  float DurationS = 4;
}
message FoodAttributesProto {
  repeated Rpc.HoloItemEffect ItemEffect = 1;
  repeated float ItemEffectPercent = 2;
  float GrowthPercent = 3;
}
message InventoryUpgradeAttributesProto {
  int32 AdditionalStorage = 1;
  Rpc.InventoryUpgradeType UpgradeType = 2;
}
message ExperienceBoostAttributesProto {
  float XpMultiplier = 1;
  int32 BoostDurationMs = 2;
}
message EggIncubatorAttributesProto {
  Rpc.EggIncubatorType IncubatorType = 1;
  int32 Uses = 2;
  float DistanceMultiplier = 3;
}
message IncenseAttributesProto {
  int32 IncenseLifetimeSeconds = 1;
  repeated Rpc.HoloPokemonType PokemonType = 2;
  float PokemonIncenseTypeProbability = 3;
  int32 StandingTimeBetweenEncountersSec = 4;
  int32 MovingTimeBetweenEncounterSec = 5;
  int32 DistanceRequiredForShorterIntervalMeters = 6;
  int32 PokemonAttractedLengthSec = 7;
}
message FortModifierAttributesProto {
  int32 ModifierLifetimeSeconds = 1;
  int32 TroyDiskNumPokemonSpawned = 2;
}
message ItemSettingsProto {
  Rpc.Item UniqueId = 1;
  Rpc.HoloItemType ItemType = 2;
  Rpc.HoloItemCategory Category = 3;
  float DropFreq = 4;
  int32 DropTrainerLevel = 5;
  Holoholo.Rpc.PokeBallAttributesProto Pokeball = 6;
  Holoholo.Rpc.PotionAttributesProto Potion = 7;
  Holoholo.Rpc.ReviveAttributesProto Revive = 8;
  Holoholo.Rpc.BattleAttributesProto Battle = 9;
  Holoholo.Rpc.FoodAttributesProto Food = 10;
  Holoholo.Rpc.InventoryUpgradeAttributesProto InventoryUpgrade = 11;
  Holoholo.Rpc.ExperienceBoostAttributesProto XpBoost = 12;
  Holoholo.Rpc.IncenseAttributesProto Incense = 13;
  Holoholo.Rpc.EggIncubatorAttributesProto EggIncubator = 14;
  Holoholo.Rpc.FortModifierAttributesProto FortModifier = 15;
}
message MoveSettingsProto {
  Rpc.HoloPokemonMove UniqueId = 1;
  int32 AnimationId = 2;
  Rpc.HoloPokemonType Type = 3;
  float Power = 4;
  float AccuracyChance = 5;
  float CriticalChance = 6;
  float HealScalar = 7;
  float StaminaLossScalar = 8;
  int32 TrainerLevelMin = 9;
  int32 TrainerLevelMax = 10;
  string VfxName = 11;
  int32 DurationMs = 12;
  int32 DamageWindowStartMs = 13;
  int32 DamageWindowEndMs = 14;
  int32 EnergyDelta = 15;
}
message MoveSequenceSettingsProto {
  repeated string Sequence = 1;
}
message TypeEffectiveSettingsProto {
  Rpc.HoloPokemonType AttackType = 2;
  repeated float AttackScalar = 1;
}
message BadgeSettingsProto {
  Rpc.HoloBadgeType BadgeType = 1;
  int32 BadgeRanks = 2;
  repeated int32 Targets = 3;
}
message CameraSettingsProto {
  string NextCamera = 1;
  repeated Rpc.CameraInterpolation Interpolation = 2;
  repeated Rpc.CameraTarget TargetType = 3;
  repeated float EaseInSpeed = 4;
  repeated float EaseOutSpeed = 5;
  repeated float DurationS = 6;
  repeated float WaitS = 7;
  repeated float TransitionS = 8;
  repeated float AngleDeg = 9;
  repeated float AngleOffsetDeg = 10;
  repeated float PitchDeg = 11;
  repeated float PitchOffsetDeg = 12;
  repeated float RollDeg = 13;
  repeated float DistanceM = 14;
  repeated float HeightPercent = 15;
  repeated float VertCtrRatio = 16;
}
message PlayerLevelSettingsProto {
  repeated int32 RankNum = 1;
  repeated int32 RequiredExp = 2;
  repeated float CpMultiplier = 3;
  int32 MaxEggPlayerLevel = 4;
  int32 MaxEncounterPlayerLevel = 5;
}
message GymLevelSettingsProto {
  repeated int32 RequiredExp = 1;
  repeated int32 LeaderSlots = 2;
  repeated int32 TrainerSlots = 3;
  repeated int32 SearchRollBonus = 4;
}
message GymBattleSettingsProto {
  float EnergyPerSec = 1;
  float DodgeEnergyCost = 2;
  float RetargetSeconds = 3;
  float EnemyAttackInterval = 4;
  float AttackServerInterval = 5;
  float RoundDurationSeconds = 6;
  float BonusTimePerAllySeconds = 7;
  int32 MaximumAttackersPerBattle = 8;
  float SameTypeAttackBonusMultiplier = 9;
  int32 MaximumEnergy = 10;
  float EnergyDeltaPerHealthLost = 11;
  int32 DodgeDurationMs = 12;
  int32 MinimumPlayerLevel = 13;
  int32 SwapDurationMs = 14;
}
message EncounterSettingsProto {
  float SpinBonusThreshold = 1;
  float ExcellentThrowThreshold = 2;
  float GreatThrowThreshold = 3;
  float NiceThrowThreshold = 4;
  int32 MilestoneThreshold = 5;
}
message PokemonUpgradeSettingsProto {
  int32 UpgradesPerLevel = 1;
  int32 AllowedLevelsAbovePlayer = 2;
  repeated int32 CandyCost = 3;
  repeated int32 StardustCost = 4;
}
message EquippedBadgeSettingsProto {
  int64 EquipBadgeCooldownMs = 1;
  repeated float CatchProbabilityBonus = 2;
  repeated float FleeProbabilityBonus = 3;
}
message GameMasterClientTemplateProto {
  string TemplateId = 1;
  Holoholo.Rpc.PokemonSettingsProto Pokemon = 2;
  Holoholo.Rpc.ItemSettingsProto Item = 3;
  Holoholo.Rpc.MoveSettingsProto Move = 4;
  Holoholo.Rpc.MoveSequenceSettingsProto MoveSequence = 5;
  Holoholo.Rpc.TypeEffectiveSettingsProto TypeEffective = 8;
  Holoholo.Rpc.BadgeSettingsProto Badge = 10;
  Holoholo.Rpc.CameraSettingsProto Camera = 11;
  Holoholo.Rpc.PlayerLevelSettingsProto PlayerLevel = 12;
  Holoholo.Rpc.GymLevelSettingsProto GymLevel = 13;
  Holoholo.Rpc.GymBattleSettingsProto BattleSettings = 14;
  Holoholo.Rpc.EncounterSettingsProto EncounterSettings = 15;
  Holoholo.Rpc.IapItemDisplayProto IapItemDisplay = 16;
  Holoholo.Rpc.IapSettingsProto IapSettings = 17;
  Holoholo.Rpc.PokemonUpgradeSettingsProto PokemonUpgrades = 18;
  Holoholo.Rpc.EquippedBadgeSettingsProto EquippedBadges = 19;
}
message GetGameMasterClientTemplatesProto {
}
message GetGameMasterClientTemplatesOutProto {
  Rpc.Result.Types.GetGameMasterClientTemplatesOutProto.Result Result = 1;
  repeated Holoholo.Rpc.GameMasterClientTemplateProto Items = 2;
  uint64 Timestamp = 3;
}
message GetRemoteConfigVersionsProto {
  Rpc.Platform Platform = 1;
  string DeviceManufacturer = 2;
  string DeviceModel = 3;
  string Locale = 4;
  uint32 AppVersion = 5;
}
message GetRemoteConfigVersionsOutProto {
  Rpc.Result.Types.GetRemoteConfigVersionsOutProto.Result Result = 1;
  uint64 GameMasterTimestamp = 2;
  uint64 AssetDigestTimestamp = 3;
}


message ActionLogEntry {
  int64 TimestampMs = 1;
  bool Sfida = 2;
  Holoholo.Rpc.CatchPokemonLogEntry CatchPokemon = 3;
  Holoholo.Rpc.FortSearchLogEntry FortSearch = 4;
}
message CatchPokemonLogEntry {
  Rpc.Result.Types.CatchPokemonLogEntry.Result Result = 1;
  int32 PokedexNumber = 2;
  int32 CombatPoints = 3;
  uint64 PokemonId = 4;
}
message FortSearchLogEntry {
  Rpc.Result.Types.FortSearchLogEntry.Result Result = 1;
  string FortId = 2;
  repeated Holoholo.Rpc.ItemProto Items = 3;
  int32 Eggs = 4;
}

message PlayerBadgeProto {
  Rpc.HoloBadgeType BadgeType = 1;
  int32 Rank = 2;
  int32 StartValue = 3;
  int32 EndValue = 4;
  double CurrentValue = 5;
}
message PlayerProfileProto {
  string PlayerName = 1;
}
message PlayerProfileOutProto {
  Rpc.Result.Types.PlayerProfileOutProto.Result Result = 1;
  int64 StartTime = 2;
  repeated Holoholo.Rpc.PlayerBadgeProto Badges = 3;
}
message LevelUpRewardsProto {
  int32 Level = 1;
}
message LevelUpRewardsOutProto {
  Rpc.Result.Types.LevelUpRewardsOutProto.Result Result = 1;
  repeated Holoholo.Rpc.AwardItemProto Items = 2;
  repeated Rpc.Item ItemsUnlocked = 4;
}
message PokemonFortProto {
  string FortId = 1;
  int64 LastModifiedMs = 2;
  double Latitude = 3;
  double Longitude = 4;
  int32 Team = 5;
  int32 GuardPokemonId = 6;
  int32 GuardPokemonLevel = 7;
  bool Enabled = 8;
  Rpc.FortType FortType = 9;
  int64 GymPoints = 10;
  bool IsInBattle = 11;
  repeated Rpc.Item ActiveFortModifier = 12;
  Holoholo.Rpc.MapPokemonProto ActivePokemon = 13;
  int64 CooldownCompleteMs = 14;
  Rpc.Sponsor.Types.FortSponsor.Sponsor Sponsor = 15;
  Rpc.RenderingType.Types.FortRenderingType.RenderingType RenderingType = 16;
}

message ClientPlayerProto {
  int64 CreationTimeMs = 1;
  string Name = 2;
  int32 Team = 5;
  repeated Rpc.TutorialCompletion TutorialComplete = 7;
  Holoholo.Rpc.PlayerAvatarProto PlayerAvatarProto = 8;
  int32 MaxPokemonStorage = 9;
  int32 MaxItemStorage = 10;
  Holoholo.Rpc.DailyBonusProto DailyBonusProto = 11;
  Holoholo.Rpc.EquippedBadgeProto EquippedBadgeProto = 12;
  Holoholo.Rpc.ContactSettingsProto ContactSettingsProto = 13;
  repeated Holoholo.Rpc.CurrencyQuantityProto CurrencyBalance = 14;
}
message CurrencyQuantityProto {
  string CurrencyType = 1;
  int32 Quantity = 2;
}
message ContactSettingsProto {
  bool SendMarketingEmails = 1;
  bool SendPushNotifications = 2;
}
message DailyBonusProto {
  int64 NextCollectTimestampMs = 1;
  int64 NextDefenderBonusCollectTimestampMs = 2;
}
message EquippedBadgeProto {
  Rpc.HoloBadgeType EquippedBadge = 1;
  int32 Level = 2;
  int64 NextEquipChangeAllowedTimestampMs = 3;
}
message GetPlayerProto {
}
message GetPlayerOutProto {
  bool Success = 1;
  Holoholo.Rpc.ClientPlayerProto Player = 2;
}
message PlayerUpdateProto {
  double Lat = 1;
  double Lng = 2;
}
message PlayerUpdateOutProto {
  repeated Holoholo.Rpc.WildPokemonProto WildPokemon = 1;
  repeated Holoholo.Rpc.PokemonFortProto Fort = 2;
  int32 FortsNearby = 3;
}
message SetFavoritePokemonProto {
  int64 PokemonId = 1;
  bool IsFavorite = 2;
}
message SetFavoritePokemonOutProto {
  Rpc.Result.Types.SetFavoritePokemonOutProto.Result Result = 1;
}
message ReleasePokemonProto {
  uint64 PokemonId = 1;
  repeated uint64 PokemonIds = 2;
}
message ReleasePokemonOutProto {
  Rpc.Status.Types.ReleasePokemonOutProto.Status Status = 1;
  int32 CandyAwarded = 2;
}
message DebugDeletePlayerProto {
}
message DebugDeletePlayerOutProto {
  bool Success = 1;
}
message GetSuggestedCodenamesRequestProto {
}
message GetSuggestedCodenamesResponseProto {
  repeated string Codename = 1;
  bool Success = 2;
}
message CheckCodenameAvailableRequestProto {
  string Codename = 1;
}
message ClaimCodenameRequestProto {
  string Codename = 1;
}
message CodenameResultProto {
  string Codename = 1;
  string UserMessage = 2;
  bool IsAssignable = 3;
  Rpc.Status.Types.CodenameResultProto.Status Status = 4;
}
message SetAvatarProto {
  Holoholo.Rpc.PlayerAvatarProto PlayerAvatarProto = 2;
}
message SetAvatarOutProto {
  Rpc.Status.Types.SetAvatarOutProto.Status Status = 1;
  Holoholo.Rpc.ClientPlayerProto Player = 2;
}
message SetContactSettingsProto {
  Holoholo.Rpc.ContactSettingsProto ContactSettingsProto = 1;
}
message SetContactSettingsOutProto {
  Rpc.Status.Types.SetContactSettingsOutProto.Status Status = 1;
  Holoholo.Rpc.ClientPlayerProto Player = 2;
}
message SetPlayerTeamProto {
  Rpc.Team Team = 1;
}
message SetPlayerTeamOutProto {
  Rpc.Status.Types.SetPlayerTeamOutProto.Status Status = 1;
  Holoholo.Rpc.ClientPlayerProto Player = 2;
}
message MarkTutorialCompleteProto {
  repeated Rpc.TutorialCompletion TutorialComplete = 1;
  bool SendMarketingEmails = 2;
  bool SendPushNotifications = 3;
}
message MarkTutorialCompleteOutProto {
  bool Success = 1;
  Holoholo.Rpc.ClientPlayerProto Player = 2;
}
message CheckAwardedBadgesProto {
}
message CheckAwardedBadgesOutProto {
  bool Success = 1;
  repeated Rpc.HoloBadgeType AwardedBadges = 2;
  repeated int32 AwardedBadgeLevels = 3;
}
message PtcToken {
  string Token = 1;
  int32 Expiration = 2;
}
message EquipBadgeProto {
  Rpc.HoloBadgeType Badge = 1;
}
message EquipBadgeOutProto {
  Rpc.Result.Types.EquipBadgeOutProto.Result Result = 1;
  Holoholo.Rpc.EquippedBadgeProto Equipped = 2;
}
message GetActionLogRequest {
}
message GetActionLogResponse {
  Rpc.Result.Types.GetActionLogResponse.Result Result = 1;
  repeated Holoholo.Rpc.ActionLogEntry Log = 2;
}
message DownloadSettingsActionProto {
  string Sha1 = 1;
}
message DownloadSettingsResponseProto {
  string Error = 1;
  string Sha1 = 2;
  Google.Protobuf.ByteString Values = 3;
}
message RegisterSfidaRequest {
  string SfidaId = 1;
}
message RegisterSfidaResponse {
  Google.Protobuf.ByteString AccessToken = 1;
}
message TradingSearchProto {
  double Lat = 1;
  double Lng = 2;
}
message TradingSearchOutProto {
  Rpc.Result.Types.TradingSearchOutProto.Result Result = 1;
  repeated string PlayerNames = 2;
}
message TradingOfferProto {
  string TradingPlayer = 1;
  uint64 PokemonId = 2;
}
message TradingOfferOutProto {
  Rpc.Result.Types.TradingOfferOutProto.Result Result = 1;
  uint64 TradeId = 2;
}
message PollForTradeResponseProto {
  uint64 TradeId = 1;
  uint64 PokemonId = 2;
  bool RequestCancel = 3;
}
message PollForTradeResponseOutProto {
  Rpc.Result.Types.PollForTradeResponseOutProto.Result Result = 1;
  Holoholo.Rpc.PokemonProto ReturnPokemon = 2;
}
message TradingResultProto {
  uint64 TradeId = 1;
  bool PlayerAccept = 2;
}
message TradingResultOutProto {
  Rpc.Result.Types.TradingResultOutProto.Result Result = 1;
}
message UpgradePokemonProto {
  uint64 PokemonId = 1;
}
message UpgradePokemonOutProto {
  Rpc.Result.Types.UpgradePokemonOutProto.Result Result = 1;
  Holoholo.Rpc.PokemonProto UpgradedPokemon = 2;
}
message UseItemPotionProto {
  Rpc.Item Item = 1;
  uint64 PokemonId = 2;
}
message UseItemPotionOutProto {
  Rpc.Result.Types.UseItemPotionOutProto.Result Result = 1;
  int32 Stamina = 2;
}
message UseItemReviveProto {
  Rpc.Item Item = 1;
  uint64 PokemonId = 2;
}
message UseItemReviveOutProto {
  Rpc.Result.Types.UseItemReviveOutProto.Result Result = 1;
  int32 Stamina = 2;
}
message UseItemGymProto {
  Rpc.Item Item = 1;
  string GymId = 2;
  double PlayerLatDegrees = 3;
  double PlayerLngDegrees = 4;
}
message UseItemGymOutProto {
  Rpc.Result.Types.UseItemGymOutProto.Result Result = 1;
  int64 UpdatedGp = 2;
}
message UseItemXpBoostProto {
  Rpc.Item Item = 1;
}
message UseItemXpBoostOutProto {
  Rpc.Result.Types.UseItemXpBoostOutProto.Result Result = 1;
  Holoholo.Rpc.AppliedItemsProto AppliedItems = 2;
}
message UseItemEggIncubatorProto {
  string ItemId = 1;
  int64 PokemondId = 2;
}
message UseItemEggIncubatorOutProto {
  Rpc.Result.Types.UseItemEggIncubatorOutProto.Result Result = 1;
  Holoholo.Rpc.EggIncubatorProto EggIncubator = 2;
}
